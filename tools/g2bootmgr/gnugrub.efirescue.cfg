#
#   Resides in the EFI\grub2win directory.
#   Contains just enough code to rescue boot Windows
#   if the normal C:\grub2 directory is missing.
#

set default=1
set pager=1
set gfxpayload=text
set menu_color_normal=white/blue
set menu_color_highlight=black/green
set efibootmgr=/efi/Microsoft/Boot/bootmgfw.efi
search.file $efibootmgr rootaddress
if [ ! $? = 0 ] ; then
      unset rootaddress
      echo  The Microsoft EFI boot manager
      echo  $efibootmgr was not found. 
      echo  Grub cannot boot Windows.
      echo  Press the ESC key to continue
      sleep -v -i 30
fi
set hardwarefile=/grub2/windata/system.info.txt
search.file $hardwarefile hardwareaddress
if [ ! $? = 0 ] ; then unset hardwareaddress ; fi
unset theme
unset icondir
unset timeout

#
#  Menu Entry 0       Windows EFI Boot Manager
#
#  ** Grub will boot this OS by default **
#
if [ ! -z $rootaddress ] ; then
    menuentry   ' '   {echo}                            # Dummy
    menuentry   'Windows EFI Boot Manager                               Hotkey=w'   --hotkey=w   {
	set root=($rootaddress)
	echo Booting   Windows EFI Boot Manager
	echo Boot disk address is  $root
	sleep -v -i 5
        echo ; echo Grub is now loading the Windows EFI Boot Manager
	chainloader $efibootmgr
    }
fi

#
#
#  Menu Entry   Display Hardware info     Only shows if registry data is available
#
if [ ! -z $hardwareaddress ] ; then
    menuentry   ' '   {echo}                                 # Dummy
    menuentry   'Display Hardware and Secure Boot info                  Hotkey=h'   --hotkey=h   {
	set pager=1
        clear
        echo
        echo Note: This data is updated when you run Grub2Win under Windows.
        echo
        cat ($hardwareaddress)/grub2/windata/system.info.txt
        echo
	echo ** Press enter to return to the rescue menu **
	read
	set pager=0
    }
fi

#
#  Menu Entry   Display Grub information
#
    menuentry   ' '   {echo}                                 # Dummy
    menuentry   'Display Grub information                               Hotkey=g'   --hotkey=g   {
        set gnugrub_procbits=32
        if [ cpuid -l ] ; then set gnugrub_procbits=64 ; fi
        clear
        set pager=0
        echo
        echo Grub2Win - The PC CPU is $gnugrub_procbits bit - The firmware type is EFI
        echo -n "System time is "
        date
        echo
        echo The Grub command path is	$cmdpath 
        echo
        echo Info for EFI partition $efipart follows:
        ls   $efipart
        echo
        echo The GNU Grub EFI boot file is $cmdpath/$gnugrub_efiboot for $grub2win_procbits bit EFI firmware
        echo
        echo Grub disk drive and partition list:
        echo
        ls
        echo
        echo
        echo ** Press enter to return to the rescue menu **
        echo
        read
        set pager=1
}

#
#  Menu Entry          Utility - Scan disks and partitions
#
    menuentry   ' '   {echo}                                 # Dummy
    menuentry   'Utility to Scan Disk Drives and Partitions             Hotkey=d'   --hotkey=d   {
        diskutil
}

#
#  Menu Entry       Shutdown the system
#
    menuentry   ' '   {echo}                                 # Dummy
    menuentry   'Shutdown the system                                    Hotkey=s'   --hotkey=s   {
         clear
         set pager=1
         echo
         echo Grub is shutting down your machine
         echo
         sleep -i -v 2
         halt
         # If halt fails, display an error message
         echo Grub Shutdown is not supported by your firmware
}

source $cmdpath/gnugrub.diskutil.cfg